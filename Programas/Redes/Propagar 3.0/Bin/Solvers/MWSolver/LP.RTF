{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1031{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f16\froman\fcharset0\fprq0{\*\panose 00000000000000000000}KI;}
{\f17\froman\fcharset0\fprq0{\*\panose 00000000000000000000}K;}{\f18\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman (Hebrew);}{\f19\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman (Arabic);}
{\f20\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New (Hebrew);}{\f21\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New (Arabic);}{\f22\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic;}
{\f23\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier 16.67 Pitch;}{\f24\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times;}{\f25\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}
{\f26\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}
{\f29\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f30\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f31\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f32\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f33\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic;}{\f34\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}GulimChe;}
{\f35\fmodern\fcharset136\fprq1{\*\panose 02010609000101010101}MingLiU;}{\f36\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}MS Song;}{\f37\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}MS Hei;}
{\f38\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David;}{\f39\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David Transparent;}{\f40\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam;}
{\f41\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Miriam Fixed;}{\f42\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Fixed Miriam Transparent;}{\f43\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam Transparent;}
{\f44\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod;}{\f45\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Arabic Transparent;}{\f46\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Traditional Arabic;}
{\f47\fswiss\fcharset0\fprq2{\*\panose 020b0304020202020204}Cordia New;}{\f48\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Angsana New;}{\f49\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}IrisUPC;}
{\f50\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f51\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f52\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}
{\f53\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f54\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f55\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}
{\f56\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Bookshelf Symbol 3;}{\f57\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Bookshelf Symbol 4;}{\f58\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}Bookshelf Symbol 5;}
{\f59\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f60\fswiss\fcharset0\fprq2{\*\panose 020b0603020102020204}Franklin Gothic Medium;}{\f61\froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}
{\f62\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f63\fscript\fcharset0\fprq2 Estrangelo Edessa;}{\f64\fnil\fcharset0\fprq2 Gautami;}{\f65\fnil\fcharset0\fprq2 Latha;}{\f66\fnil\fcharset0\fprq2 Mangal;}
{\f67\fnil\fcharset0\fprq2 MV Boli;}{\f68\fnil\fcharset0\fprq2 Raavi;}{\f69\fnil\fcharset0\fprq2 Shruti;}{\f70\fnil\fcharset0\fprq2 Tunga;}{\f71\froman\fcharset0\fprq2{\*\panose 010a0502050306030303}Sylfaen;}
{\f72\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Microsoft Sans Serif;}{\f73\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}StarBats;}{\f74\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}StarMath;}
{\f75\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Arioso;}{\f76\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Chevara;}{\f77\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}ChevaraOutline;}
{\f78\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Conga;}{\f79\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Helmet;}{\f80\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}HelmetCondensed;}
{\f81\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Timmons;}{\f82\froman\fcharset0\fprq2{\*\panose 02040603070505020404}Lucida Bright;}{\f83\fswiss\fcharset0\fprq2{\*\panose 020b0602040502020204}Lucida Sans;}
{\f84\fswiss\fcharset0\fprq1{\*\panose 020b0602040502020304}Lucida Sans Typewriter;}{\f85\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}MS Reference Sans Serif;}{\f86\froman\fcharset0\fprq2{\*\panose 02040502050405020303}MS Reference Serif;}
{\f87\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana Ref;}{\f88\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia Ref;}{\f89\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Reference 1;}
{\f90\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}MS Reference 2;}{\f91\fnil\fcharset2\fprq2{\*\panose 05000500000000000000}MS Reference Specialty;}{\f92\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}RefSpecialty;}
{\f93\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}{\f94\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}SWDEV13;}{\f95\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}SWkeys;}
{\f96\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Jokerman LET;}{\f97\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}John Handy LET;}{\f98\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Orange LET;}
{\f99\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Academy Engraved LET;}{\f100\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}University Roman LET;}{\f101\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Victorian LET;}
{\f102\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Milano LET;}{\f103\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Smudger LET;}{\f104\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Westwood LET;}
{\f105\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Ruach LET;}{\f106\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Rage Italic LET;}{\f107\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}La Bamba LET;}
{\f108\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Quixley LET;}{\f109\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Pump Demi Bold LET;}{\f110\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Tiranti Solid LET;}
{\f111\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Mekanik LET;}{\f112\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}One Stroke Script LET;}{\f113\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Highlight LET;}
{\f114\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Odessa LET;}{\f115\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Scruff LET;}{\f116\fdecor\fcharset0\fprq2{\*\panose 04040905080b02020502}Broadway BT;}
{\f117\fswiss\fcharset0\fprq2{\*\panose 020b0504020202060204}Square721 BT;}{\f118\fscript\fcharset0\fprq2{\*\panose 03020602050506080705}ParkAvenue BT;}{\f119\fscript\fcharset0\fprq2{\*\panose 03090702030407020403}Staccato222 BT;}
{\f120\fscript\fcharset0\fprq2{\*\panose 03020802040502060804}Cataneo BT;}{\f121\fscript\fcharset0\fprq2{\*\panose 03040802020608040804}Blackletter686 BT;}{\f122\fscript\fcharset0\fprq2{\*\panose 03060702050402020204}Calligraph421 BT;}
{\f123\fscript\fcharset0\fprq2{\*\panose 03080802020302020203}MisterEarl BT;}{\f124\fdecor\fcharset0\fprq2{\*\panose 04080805060107010802}OldDreadfulNo7 BT;}{\f125\fswiss\fcharset2\fprq2{\*\panose 050c0102010209020202}HolidayPi BT;}
{\f126\fnil\fcharset0\fprq2{\*\panose 01010101010101010101}Adolescence;}{\f127\fswiss\fcharset0\fprq2{\*\panose 020b0803020204040204}AntigoniBd;}{\f128\fswiss\fcharset0\fprq2{\*\panose 020b0406020204020204}Antigoni Light;}
{\f129\fswiss\fcharset0\fprq2{\*\panose 020b0703020204030204}Antigoni Med;}{\f130\fswiss\fcharset0\fprq2{\*\panose 020b0603020204030204}Antigoni;}{\f131\fswiss\fcharset0\fprq2{\*\panose 020e0806020206070204}Archon;}
{\f132\fswiss\fcharset0\fprq2{\*\panose 020d0802060808030204}AucoinExtBol;}{\f133\fswiss\fcharset0\fprq2{\*\panose 020d0602050304030204}AucoinLight;}{\f134\fswiss\fcharset0\fprq2{\*\panose 020b0804040403020303}Banjoman Open Bold;}
{\f135\fswiss\fcharset0\fprq2{\*\panose 020e0803080505070304}Bedini;}{\f136\fnil\fcharset0\fprq2{\*\panose 02000503000000000004}Bermuda Solid;}{\f137\fdecor\fcharset0\fprq2{\*\panose 04010502060101010303}Creepy;}
{\f138\froman\fcharset0\fprq2{\*\panose 02090400040001020404}Curlz MT;}{\f139\fswiss\fcharset0\fprq2{\*\panose 020c0804040000000001}EraserDust;}{\f140\fswiss\fcharset0\fprq2{\*\panose 020b0900020202060204}Eurostar Black Extended;}
{\f141\fswiss\fcharset0\fprq2{\*\panose 020b0504020202050204}Eurostar;}{\f142\fswiss\fcharset0\fprq2{\*\panose 020b0507020202060204}Eurostar Regular Extended;}{\f143\fnil\fcharset0\fprq2{\*\panose 02000507000000000004}Falstaff Festival MT;}
{\f144\fnil\fcharset0\fprq2{\*\panose 01010101010101010101}Figaro MT;}{\f145\froman\fcharset0\fprq2{\*\panose 02020302060204020203}Footlight MT Light;}{\f146\fswiss\fcharset0\fprq2{\*\panose 020e0602060706020304}Gourmand;}
{\f147\fnil\fcharset0\fprq2{\*\panose 01010101010101010101}KidTYPEPaint;}{\f148\fswiss\fcharset0\fprq2{\*\panose 020b0704030103070804}Metro Nouveau;}{\f149\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Mistral AV;}
{\f150\fnil\fcharset0\fprq2{\*\panose 02000504000000000003}Orbus Multiserif;}{\f151\fnil\fcharset0\fprq2{\*\panose 02000306050000000002}Palace Script MT Semi Bold;}{\f152\froman\fcharset0\fprq2{\*\panose 02090502050106070304}Palladius;}
{\f153\fswiss\fcharset0\fprq2{\*\panose 020e0702050806020304}Peinaud;}{\f154\fswiss\fcharset0\fprq2{\*\panose 020b0904020202020204}Plump MT;}{\f155\fswiss\fcharset0\fprq2{\*\panose 020e0302020206020904}Schindler;}
{\f156\fswiss\fcharset0\fprq2{\*\panose 020e0402020206020904}Schindler Small Caps;}{\f157\fmodern\fcharset0\fprq2{\*\panose 02000509000000000005}Space Toaster;}{\f158\fnil\fcharset0\fprq2{\*\panose 02000800000000000004}Team MT;}
{\f159\fnil\fcharset0\fprq2{\*\panose 02000702030000020004}Twentieth Century Poster1;}{\f160\fscript\fcharset0\fprq2{\*\panose 03020602050506090804}Vianta;}{\f161\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Wendy Medium;}
{\f162\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Eurostar Regular Extended Balti;}{\f163\froman\fcharset238\fprq2 Times New Roman CE;}{\f164\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f166\froman\fcharset161\fprq2 Times New Roman Greek;}{\f167\froman\fcharset162\fprq2 Times New Roman Tur;}{\f168\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f169\fswiss\fcharset238\fprq2 Arial CE;}{\f170\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f172\fswiss\fcharset161\fprq2 Arial Greek;}{\f173\fswiss\fcharset162\fprq2 Arial Tur;}{\f174\fswiss\fcharset186\fprq2 Arial Baltic;}{\f175\fmodern\fcharset238\fprq1 Courier New CE;}{\f176\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f178\fmodern\fcharset161\fprq1 Courier New Greek;}{\f179\fmodern\fcharset162\fprq1 Courier New Tur;}{\f180\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f187\froman\fcharset238\fprq2 Times CE;}{\f188\froman\fcharset204\fprq2 Times Cyr;}
{\f190\froman\fcharset161\fprq2 Times Greek;}{\f191\froman\fcharset162\fprq2 Times Tur;}{\f192\froman\fcharset186\fprq2 Times Baltic;}{\f193\fswiss\fcharset238\fprq2 Helvetica CE;}{\f194\fswiss\fcharset204\fprq2 Helvetica Cyr;}
{\f196\fswiss\fcharset161\fprq2 Helvetica Greek;}{\f197\fswiss\fcharset162\fprq2 Helvetica Tur;}{\f198\fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f253\fswiss\fcharset238\fprq2 Tahoma CE;}{\f254\fswiss\fcharset204\fprq2 Tahoma Cyr;}
{\f256\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f257\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f258\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f319\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f320\fmodern\fcharset204\fprq1 Lucida Console Cyr;}
{\f322\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f323\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f325\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f326\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}
{\f328\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f329\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f331\fswiss\fcharset238\fprq2 Arial Black CE;}{\f332\fswiss\fcharset204\fprq2 Arial Black Cyr;}
{\f334\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f335\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f336\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f337\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f338\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}
{\f340\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f341\fscript\fcharset162\fprq2 Comic Sans MS Tur;}{\f342\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f343\fswiss\fcharset238\fprq2 Impact CE;}{\f344\fswiss\fcharset204\fprq2 Impact Cyr;}
{\f346\fswiss\fcharset161\fprq2 Impact Greek;}{\f347\fswiss\fcharset162\fprq2 Impact Tur;}{\f348\fswiss\fcharset186\fprq2 Impact Baltic;}{\f349\fswiss\fcharset238\fprq2 Verdana CE;}{\f350\fswiss\fcharset204\fprq2 Verdana Cyr;}
{\f352\fswiss\fcharset161\fprq2 Verdana Greek;}{\f353\fswiss\fcharset162\fprq2 Verdana Tur;}{\f354\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f375\fmodern\fcharset0\fprq1 MingLiU;}{\f469\fswiss\fcharset238\fprq2 Arial Narrow CE;}
{\f470\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f472\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f473\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f474\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}
{\f475\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f476\froman\fcharset204\fprq2 Bookman Old Style Cyr;}{\f478\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f479\froman\fcharset162\fprq2 Bookman Old Style Tur;}
{\f480\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f487\froman\fcharset238\fprq2 Garamond CE;}{\f488\froman\fcharset204\fprq2 Garamond Cyr;}{\f490\froman\fcharset161\fprq2 Garamond Greek;}{\f491\froman\fcharset162\fprq2 Garamond Tur;}
{\f492\froman\fcharset186\fprq2 Garamond Baltic;}{\f517\froman\fcharset238\fprq2 Georgia CE;}{\f518\froman\fcharset204\fprq2 Georgia Cyr;}{\f520\froman\fcharset161\fprq2 Georgia Greek;}{\f521\froman\fcharset162\fprq2 Georgia Tur;}
{\f522\froman\fcharset186\fprq2 Georgia Baltic;}{\f523\fswiss\fcharset238\fprq2 Franklin Gothic Medium CE;}{\f524\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cyr;}{\f526\fswiss\fcharset161\fprq2 Franklin Gothic Medium Greek;}
{\f527\fswiss\fcharset162\fprq2 Franklin Gothic Medium Tur;}{\f528\fswiss\fcharset186\fprq2 Franklin Gothic Medium Baltic;}{\f529\froman\fcharset238\fprq2 Palatino Linotype CE;}{\f530\froman\fcharset204\fprq2 Palatino Linotype Cyr;}
{\f532\froman\fcharset161\fprq2 Palatino Linotype Greek;}{\f533\froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f534\froman\fcharset186\fprq2 Palatino Linotype Baltic;}{\f535\fswiss\fcharset238\fprq2 Trebuchet MS CE;}
{\f536\fswiss\fcharset204\fprq2 Trebuchet MS Cyr;}{\f538\fswiss\fcharset161\fprq2 Trebuchet MS Greek;}{\f539\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}{\f540\fswiss\fcharset186\fprq2 Trebuchet MS Baltic;}{\f589\froman\fcharset238\fprq2 Sylfaen CE;}
{\f590\froman\fcharset204\fprq2 Sylfaen Cyr;}{\f592\froman\fcharset161\fprq2 Sylfaen Greek;}{\f593\froman\fcharset162\fprq2 Sylfaen Tur;}{\f594\froman\fcharset186\fprq2 Sylfaen Baltic;}{\f595\fswiss\fcharset238\fprq2 Microsoft Sans Serif CE;}
{\f596\fswiss\fcharset204\fprq2 Microsoft Sans Serif Cyr;}{\f598\fswiss\fcharset161\fprq2 Microsoft Sans Serif Greek;}{\f599\fswiss\fcharset162\fprq2 Microsoft Sans Serif Tur;}{\f600\fswiss\fcharset186\fprq2 Microsoft Sans Serif Baltic;}
{\f655\froman\fcharset238\fprq2 Lucida Bright CE;}{\f659\froman\fcharset162\fprq2 Lucida Bright Tur;}{\f660\froman\fcharset186\fprq2 Lucida Bright Baltic;}{\f661\fswiss\fcharset238\fprq2 Lucida Sans CE;}{\f662\fswiss\fcharset204\fprq2 Lucida Sans Cyr;}
{\f664\fswiss\fcharset161\fprq2 Lucida Sans Greek;}{\f665\fswiss\fcharset162\fprq2 Lucida Sans Tur;}{\f666\fswiss\fcharset186\fprq2 Lucida Sans Baltic;}{\f667\fswiss\fcharset238\fprq1 Lucida Sans Typewriter CE;}
{\f668\fswiss\fcharset204\fprq1 Lucida Sans Typewriter Cyr;}{\f670\fswiss\fcharset161\fprq1 Lucida Sans Typewriter Greek;}{\f671\fswiss\fcharset162\fprq1 Lucida Sans Typewriter Tur;}{\f672\fswiss\fcharset186\fprq1 Lucida Sans Typewriter Baltic;}
{\f673\fswiss\fcharset238\fprq2 MS Reference Sans Serif CE;}{\f674\fswiss\fcharset204\fprq2 MS Reference Sans Serif Cyr;}{\f676\fswiss\fcharset161\fprq2 MS Reference Sans Serif Greek;}{\f677\fswiss\fcharset162\fprq2 MS Reference Sans Serif Tur;}
{\f678\fswiss\fcharset186\fprq2 MS Reference Sans Serif Baltic;}{\f679\froman\fcharset238\fprq2 MS Reference Serif CE;}{\f680\froman\fcharset204\fprq2 MS Reference Serif Cyr;}{\f682\froman\fcharset161\fprq2 MS Reference Serif Greek;}
{\f683\froman\fcharset162\fprq2 MS Reference Serif Tur;}{\f684\froman\fcharset186\fprq2 MS Reference Serif Baltic;}{\f685\fswiss\fcharset238\fprq2 Verdana Ref CE;}{\f686\fswiss\fcharset204\fprq2 Verdana Ref Cyr;}
{\f688\fswiss\fcharset161\fprq2 Verdana Ref Greek;}{\f689\fswiss\fcharset162\fprq2 Verdana Ref Tur;}{\f690\fswiss\fcharset186\fprq2 Verdana Ref Baltic;}{\f691\froman\fcharset238\fprq2 Georgia Ref CE;}{\f692\froman\fcharset204\fprq2 Georgia Ref Cyr;}
{\f694\froman\fcharset161\fprq2 Georgia Ref Greek;}{\f695\froman\fcharset162\fprq2 Georgia Ref Tur;}{\f696\froman\fcharset186\fprq2 Georgia Ref Baltic;}{\f742\fnil\fcharset161\fprq2 Jokerman LET Greek;}{\f748\fnil\fcharset161\fprq2 John Handy LET Greek;}
{\f754\fnil\fcharset161\fprq2 Orange LET Greek;}{\f760\fnil\fcharset161\fprq2 Academy Engraved LET Greek;}{\f766\fnil\fcharset161\fprq2 University Roman LET Greek;}{\f772\fnil\fcharset161\fprq2 Victorian LET Greek;}
{\f778\fnil\fcharset161\fprq2 Milano LET Greek;}{\f784\fnil\fcharset161\fprq2 Smudger LET Greek;}{\f790\fnil\fcharset161\fprq2 Westwood LET Greek;}{\f796\fnil\fcharset161\fprq2 Ruach LET Greek;}{\f802\fnil\fcharset161\fprq2 Rage Italic LET Greek;}
{\f808\fnil\fcharset161\fprq2 La Bamba LET Greek;}{\f814\fnil\fcharset161\fprq2 Quixley LET Greek;}{\f820\fnil\fcharset161\fprq2 Pump Demi Bold LET Greek;}{\f826\fnil\fcharset161\fprq2 Tiranti Solid LET Greek;}
{\f832\fnil\fcharset161\fprq2 Mekanik LET Greek;}{\f838\fnil\fcharset161\fprq2 One Stroke Script LET Greek;}{\f844\fnil\fcharset161\fprq2 Highlight LET Greek;}{\f850\fnil\fcharset161\fprq2 Odessa LET Greek;}{\f856\fnil\fcharset161\fprq2 Scruff LET Greek;}
{\f859\fdecor\fcharset238\fprq2 Broadway BT CE;}{\f862\fdecor\fcharset161\fprq2 Broadway BT Greek;}{\f863\fdecor\fcharset162\fprq2 Broadway BT Tur;}{\f865\fswiss\fcharset238\fprq2 Square721 BT CE;}{\f868\fswiss\fcharset161\fprq2 Square721 BT Greek;}
{\f869\fswiss\fcharset162\fprq2 Square721 BT Tur;}{\f871\fscript\fcharset238\fprq2 ParkAvenue BT CE;}{\f874\fscript\fcharset161\fprq2 ParkAvenue BT Greek;}{\f875\fscript\fcharset162\fprq2 ParkAvenue BT Tur;}
{\f877\fscript\fcharset238\fprq2 Staccato222 BT CE;}{\f880\fscript\fcharset161\fprq2 Staccato222 BT Greek;}{\f881\fscript\fcharset162\fprq2 Staccato222 BT Tur;}{\f883\fscript\fcharset238\fprq2 Cataneo BT CE;}
{\f886\fscript\fcharset161\fprq2 Cataneo BT Greek;}{\f887\fscript\fcharset162\fprq2 Cataneo BT Tur;}{\f889\fscript\fcharset238\fprq2 Blackletter686 BT CE;}{\f892\fscript\fcharset161\fprq2 Blackletter686 BT Greek;}
{\f893\fscript\fcharset162\fprq2 Blackletter686 BT Tur;}{\f895\fscript\fcharset238\fprq2 Calligraph421 BT CE;}{\f898\fscript\fcharset161\fprq2 Calligraph421 BT Greek;}{\f899\fscript\fcharset162\fprq2 Calligraph421 BT Tur;}
{\f901\fscript\fcharset238\fprq2 MisterEarl BT CE;}{\f904\fscript\fcharset161\fprq2 MisterEarl BT Greek;}{\f905\fscript\fcharset162\fprq2 MisterEarl BT Tur;}{\f907\fdecor\fcharset238\fprq2 OldDreadfulNo7 BT CE;}
{\f910\fdecor\fcharset161\fprq2 OldDreadfulNo7 BT Greek;}{\f911\fdecor\fcharset162\fprq2 OldDreadfulNo7 BT Tur;}{\f925\fswiss\fcharset238\fprq2 AntigoniBd CE;}{\f928\fswiss\fcharset161\fprq2 AntigoniBd Greek;}
{\f929\fswiss\fcharset162\fprq2 AntigoniBd Tur;}{\f930\fswiss\fcharset186\fprq2 AntigoniBd Baltic;}{\f931\fswiss\fcharset238\fprq2 Antigoni Light CE;}{\f934\fswiss\fcharset161\fprq2 Antigoni Light Greek;}
{\f935\fswiss\fcharset162\fprq2 Antigoni Light Tur;}{\f936\fswiss\fcharset186\fprq2 Antigoni Light Baltic;}{\f937\fswiss\fcharset238\fprq2 Antigoni Med CE;}{\f940\fswiss\fcharset161\fprq2 Antigoni Med Greek;}
{\f941\fswiss\fcharset162\fprq2 Antigoni Med Tur;}{\f942\fswiss\fcharset186\fprq2 Antigoni Med Baltic;}{\f943\fswiss\fcharset238\fprq2 Antigoni CE;}{\f946\fswiss\fcharset161\fprq2 Antigoni Greek;}{\f947\fswiss\fcharset162\fprq2 Antigoni Tur;}
{\f948\fswiss\fcharset186\fprq2 Antigoni Baltic;}{\f949\fswiss\fcharset238\fprq2 Archon CE;}{\f952\fswiss\fcharset161\fprq2 Archon Greek;}{\f953\fswiss\fcharset162\fprq2 Archon Tur;}{\f954\fswiss\fcharset186\fprq2 Archon Baltic;}
{\f955\fswiss\fcharset238\fprq2 AucoinExtBol CE;}{\f958\fswiss\fcharset161\fprq2 AucoinExtBol Greek;}{\f959\fswiss\fcharset162\fprq2 AucoinExtBol Tur;}{\f960\fswiss\fcharset186\fprq2 AucoinExtBol Baltic;}{\f961\fswiss\fcharset238\fprq2 AucoinLight CE;}
{\f964\fswiss\fcharset161\fprq2 AucoinLight Greek;}{\f965\fswiss\fcharset162\fprq2 AucoinLight Tur;}{\f966\fswiss\fcharset186\fprq2 AucoinLight Baltic;}{\f973\fswiss\fcharset238\fprq2 Bedini CE;}{\f976\fswiss\fcharset161\fprq2 Bedini Greek;}
{\f977\fswiss\fcharset162\fprq2 Bedini Tur;}{\f978\fswiss\fcharset186\fprq2 Bedini Baltic;}{\f985\fdecor\fcharset238\fprq2 Creepy CE;}{\f989\fdecor\fcharset162\fprq2 Creepy Tur;}{\f997\fswiss\fcharset238\fprq2 EraserDust CE;}
{\f1001\fswiss\fcharset162\fprq2 EraserDust Tur;}{\f1003\fswiss\fcharset238\fprq2 Eurostar Black Extended CE;}{\f1006\fswiss\fcharset161\fprq2 Eurostar Black Extended Greek;}{\f1007\fswiss\fcharset162\fprq2 Eurostar Black Extended Tur;}
{\f1008\fswiss\fcharset186\fprq2 Eurostar Black Extended Baltic;}{\f1009\fswiss\fcharset238\fprq2 Eurostar CE;}{\f1012\fswiss\fcharset161\fprq2 Eurostar Greek;}{\f1013\fswiss\fcharset162\fprq2 Eurostar Tur;}
{\f1014\fswiss\fcharset186\fprq2 Eurostar Baltic;}{\f1015\fswiss\fcharset238\fprq2 Eurostar Regular Extended CE;}{\f1018\fswiss\fcharset161\fprq2 Eurostar Regular Extended Greek;}{\f1019\fswiss\fcharset162\fprq2 Eurostar Regular Extended Tur;}
{\f1020\fswiss\fcharset186\fprq2 Eurostar Regular Extended Baltic;}{\f1039\fswiss\fcharset238\fprq2 Gourmand CE;}{\f1042\fswiss\fcharset161\fprq2 Gourmand Greek;}{\f1043\fswiss\fcharset162\fprq2 Gourmand Tur;}
{\f1044\fswiss\fcharset186\fprq2 Gourmand Baltic;}{\f1051\fswiss\fcharset238\fprq2 Metro Nouveau CE;}{\f1054\fswiss\fcharset161\fprq2 Metro Nouveau Greek;}{\f1055\fswiss\fcharset162\fprq2 Metro Nouveau Tur;}
{\f1056\fswiss\fcharset186\fprq2 Metro Nouveau Baltic;}{\f1075\froman\fcharset238\fprq2 Palladius CE;}{\f1078\froman\fcharset161\fprq2 Palladius Greek;}{\f1079\froman\fcharset162\fprq2 Palladius Tur;}{\f1080\froman\fcharset186\fprq2 Palladius Baltic;}
{\f1081\fswiss\fcharset238\fprq2 Peinaud CE;}{\f1084\fswiss\fcharset161\fprq2 Peinaud Greek;}{\f1085\fswiss\fcharset162\fprq2 Peinaud Tur;}{\f1086\fswiss\fcharset186\fprq2 Peinaud Baltic;}{\f1093\fswiss\fcharset238\fprq2 Schindler CE;}
{\f1096\fswiss\fcharset161\fprq2 Schindler Greek;}{\f1097\fswiss\fcharset162\fprq2 Schindler Tur;}{\f1098\fswiss\fcharset186\fprq2 Schindler Baltic;}{\f1099\fswiss\fcharset238\fprq2 Schindler Small Caps CE;}
{\f1102\fswiss\fcharset161\fprq2 Schindler Small Caps Greek;}{\f1103\fswiss\fcharset162\fprq2 Schindler Small Caps Tur;}{\f1104\fswiss\fcharset186\fprq2 Schindler Small Caps Baltic;}{\f1126\fscript\fcharset161\fprq2 Vianta Greek;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\lang2057\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\widctlpar\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext15 footnote text;}{\*\cs16 \additive \super \sbasedon10 footnote reference;}{\s17\widctlpar\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext17 endnote text;}{\*\cs18 \additive \super 
\sbasedon10 endnote reference;}{\s19\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext19 header;}{\s20\widctlpar\tqc\tx4153\tqr\tx8306\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext20 footer;}}{\*\listtable
{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}{\list\listtemplateid67567631\listsimple{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid150173383}{\list\listtemplateid656196514\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat2
\levelold\levelspace0\levelindent283{\leveltext\'03\'00. ;}{\levelnumbers\'01;}\b0\i0\f2\fs20\fbias0 \fi-283\li283 }{\listname ;}\listid410127387}{\list\listtemplateid-128926588\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold
\levelspace0\levelindent283{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-283\li283 }{\listname ;}\listid1154175367}{\list\listtemplateid-128926588\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent283
{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-283\li283 }{\listname ;}\listid1250389120}{\list\listtemplateid-128926588\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent283{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\fi-283\li283 }{\listname ;}\listid1345135178}{\list\listtemplateid832348826\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat2\levelold\levelspace0\levelindent283{\leveltext\'03\'00. ;}{\levelnumbers\'01;}
\b0\i0\f2\fs24\fbias0 \fi-283\li283 }{\listname ;}\listid1666281022}{\list\listtemplateid-128926588\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent283{\leveltext\'02\'00.;}{\levelnumbers\'01;}
\fi-283\li1003 }{\listname ;}\listid1746294585}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent283{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-283\li283 }}\ls1}{\listoverride\listid1746294585\listoverridecount0\ls2}{\listoverride\listid1154175367\listoverridecount0\ls3}{\listoverride\listid1666281022\listoverridecount0\ls4}
{\listoverride\listid1250389120\listoverridecount0\ls5}{\listoverride\listid410127387\listoverridecount0\ls6}{\listoverride\listid1345135178\listoverridecount0\ls7}{\listoverride\listid150173383\listoverridecount0\ls8}}{\info{\author Markus Weidenauer}
{\operator Markus Weidenauer}{\creatim\yr1998\mo4\dy16\hr9\min2}{\revtim\yr2004\mo6\dy27\hr15\min21}{\version38}{\edmins0}{\nofpages50}{\nofwords6534}{\nofchars-32766}{\*\company Privat}{\nofcharsws0}{\vern89}}
\paperw11906\paperh16838\margl1417\margr1417\margt1417\margb1134 \widowctrl\enddoc\aenddoc\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\viewkind4\viewscale100 \fet1\sectd 
\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\f2\super #{\footnote\ftnalt 
\pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 main}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 Main Page}}K{\footnote\ftnalt 
\pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super K}{\lang1036 Main Page}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 1}}}{\f2 
Help for program LP.EXE                 Markus Weidenauer
\par                                                  27.06.2004
\par 
\par                           LL      PPPPPPP
\par                           LL      PPPPPPPP
\par                           LL      PP    PP
\par                           LL      PP    PP
\par                           LL      PP    PP
\par                           LL      PPPPPPP
\par                           LL      PP
\par                           }{\f2\lang1031 LL      PP
\par                           LL      PP
\par                           LLLLLLL PP
\par                           LLLLLLL PP
\par 
\par }{\f2 I present an optimiser which can solve LP, Integer and Mixed-Integer problems. Maximisation and minimisation is possible.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 limits}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{
\lang1036 Limits}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super K}{\lang1036 Limits}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{2}}}{\f2 LIMITS

\par For variablename I use the convention for programming languages:
\par First character is from the list ['A'..'Z','a'..'z','_'], the following characters are any of ['A'..'Z','a'..'z','_','0'..'9']
\par The length of a name is limited to 25 chars.
\par 
\par }{\f2\lang1036 Maximal matrix size:
\par 
\par }{\f2 DOS Version:
\par depending on available Memory about 500 rows * 1500 Col
\par 
\par }{\f2\lang2070 DOS-DPMI
\par nrow+ncol < 16382 (2^14-1)
\par }{\f2 nrow      < 6000 ROWS (incl. OBJF).
\par 
\par These limits are only the limits of the used }{\strike\f2 Compiler}{\v\f2 compiler}{\f2  (64K per array).
\par 
\par For a column I use a pointer (4 Bytes).
\par Internally rows and columns are treated identically. That is the reason for the 1. limit (nrow+ncol)
\par The second limit arises from the compact storage of vectors:
\par For a single matrix entry I need 10 bytes:
\par     2 byte to define the row
\par     8 bytes to store the coefficient
\par 
\par The WIN-32 version was compiled with Inprise Delphi 6.
\par It should solve problems of any size (limited only by avalable memory.
\par 
\par The maximum number of }{\strike\f2 SOS}{\f2 2-2 constraints is at the moment limited to 100. To change this number increase in Unit TTY the parameter max_sos2 to the number you need and recompile or ask me to to it.
\par }{\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{iteration}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Iteration}}K
{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{iteration;Keyboard}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 5}}}{\f2 ITERATION
\par An iteration is completely determined by two items:
\par The vector entering the basis and the vector leaving the basis. Normally with a "good" basisexchange an improvement of the objective function is linked with the exception that this is only valid if you are already feasible. As long as you are still 
infeasible the OBJF may get worse. But during this operation the sum of infeasibilities should decrease. Also the number of infeasibilities should get smaller. After reaching feasibility the OBJF should improve with every iteration, but it may happen that
 the OBJF remains equal due to cycling or degeneracy.
\par 
\par }{\b\f2 Keyboard}{\f2  command allowed during optimisation:
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 ESC}{\f2 :
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 1.\tab}}\pard \fi-283\li1003\widctlpar{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls2\adjustright {\f2 LP:  Stops Iteration
\par }\pard \fi-283\li1003\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {\f2 The Iteration can be continued without regret.
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 2.\tab}}\pard \fi-283\li1003\widctlpar{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls2\adjustright {\f2 MIP: Ask for Interruption
\par }\pard \fi-283\li1003\widctlpar\ilvl12\adjustright {\f2 The search tree will be cut and all information about searched nodes is lost. The best found solution is kept in memory.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 d,D}{\f2 
 Toggle the parameter 'ITERLOG' between 0, 1 and 10000
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 -}{\f2 
   The parameter npricing is divided by 2 pricing=max(1,npricing DIV 2)
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 +}{\f2 
   The parameter npricing is multiplied by 2 npricing=min(32000,npricing * 2)
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 e,E}{\f2  Pop up the edit }{\strike\f2 
parameter window}{\v\f2 parameter}{\f2 
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 m,M}{\f2 
 During integer search show the next 100 waiting nodes with their }{\strike\f2 objective function}{\v\f2 objf}{\f2 . This graph is displayed for at most 10 s or until the next keyboard hit.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 n,N}{\f2 
 During integer search show the next 16000 waiting nodes with their objective function. This graph is displayed for at most 10 s or until the next keyboard hit.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 o,O}{\f2 
 During integer search show the all waiting nodes with their objective function. This graph is displayed for at most 10 s or until the next keyboard hit.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 s,S}{\f2 
 During Integer search all waiting nodes are saved in a }{\strike\f2 file}{\v\f2 binary-file}{\f2  for later restart of optimization without regret.
\par {\pntext\pard\plain\f3\fs20\lang1036\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2\lang1036 t,T}{\f2\lang1036  Toggle the }
{\strike\f2\lang1036 Epsilon Perturbation}{\v\f2\lang1036 epsilon-perturbation}{\f2\lang1036 
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 w,W}{\f2 
 IF in integer mode then reduce the maximal number of in memory stored nodes by 100
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 x,X}{\f2 
 In integer mode then increase the maximal number of in memory stored nodes by 100
\par }\pard \widctlpar\adjustright {\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 menu}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 Menu-Structure}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super K}{\lang1036 Menu}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 6}}}{\f2 MENU
\par After programstart you see a menu which reacts on cursorkeys, highlighted character or mouseclick
\par 
\par OBJECTIVE
\par  MAXIMISE\tab \tab \tab set direction to maximisation
\par  MINIMISE\tab \tab \tab set direction to minimisation
\par  SELECT OBJF\tab \tab select the }{\strike\f2 OBJF}{\v\f2 objf}{\f2  from the set of N-ROWS
\par  CRASH\tab \tab \tab build a }{\strike\f2 crash}{\v\f2 crash}{\f2  }{\strike\f2 basis}{\v\f2 basis}{\f2  from all
\par }\pard \fi720\li2160\widctlpar\adjustright {\f2 vectors
\par }\pard \widctlpar\adjustright {\f2  PROBLEM\tab \tab \tab define }{\strike\f2 OBJF}{\v\f2 objf}{\f2  }{\strike\f2 RHS}{\v\f2 rhs}{\f2  }{\strike\f2 BOUND}{\v\f2 bounds}{\f2  }{\strike\f2 RANGE}{\v\f16 ranges}{\f2 
\par NEW\tab \tab \tab \tab remove problem from memory
\par LOAD
\par  LP\tab \tab \tab \tab read lp-problem in }{\strike\f2 row-wise formulation}{\v\f2 row-wise-in}{\f2 
\par  MPSX\tab \tab \tab \tab read lp-problem in }{\strike\f2 MPSX-format}{\v\f2 mpsx-format-in}{\f2 
\par  MPSX FORMATTED\tab \tab read }{\strike\f2 formatted-MPSX-format}{\v\f2 mpsx-formatted-in}{\f2 
\par }\pard \li2880\widctlpar\adjustright {\f2 lp-problem in, variables may contain spaces but length of names is then restricted to 8 chars
\par }\pard \widctlpar\adjustright {\f2  BASIS\tab \tab \tab read a }{\strike\f2 basis}{\v\f2 basis}{\f2 
\par TREE\tab \tab \tab \tab read integer search tree of a previous saved
\par }\pard \li2880\widctlpar\adjustright {\f2 run. The required files are created during integer-search and stored with the }{\strike\f2 's'-command}{\v\f2 iteration}{\f2  from the keyboard.
\par }\pard \widctlpar\adjustright {\f2 SAVE
\par  BASIS\tab \tab \tab save basis to disk
\par  SOLUTION\tab \tab \tab save }{\strike\f2 continuos solution}{\v\f2 solution-file-example}{\f2  to disk
\par  SOLUTION-CSV\tab \tab save }{\strike\f2 continuos solution-CSV}{\v\f2 solution-file-example}{\f2  in CSV format}{\f2  to disk
\par  }{\f2 INTEGER-SOLUTION\tab \tab save }{\strike\f2 integer solution}{\v\f2 integer-solution-file-example}{\f2  to disk
\par }{\f2  }{\f2 INTEGER-SOLUTION}{\f2 -CSV}{\f2 \tab save }{\strike\f2 integer solution}{\strike\f2 -CSV}{\v\f2 integer-solution-file-example}{\f2  in CSV format}{\f2  }{\f2 to disk
\par }{\f2 LP\tab \tab \tab \tab save problem in }{\strike\f2 Row-wise-format}{\v\f2 row-wise-in}{\f2 
\par  MPSX\tab \tab \tab \tab save problem in }{\strike\f2 MPSX-format}{\v\f2 mpsx-format-in}{\f2 
\par GO\tab \tab \tab \tab \tab }{\strike\f2 Start LP-Solution}{\v\f2 iteration}{\f2 
\par INTEGER OPTIMISATION\tab start optimisation with above defined
\par }\pard \fi720\li2160\widctlpar\adjustright {\f2 direction
\par }\pard \widctlpar\adjustright {\f2 OTHER
\par  INVERT\tab \tab \tab force an }{\strike\f2 inversion}{\v\f2 inversion}{\f2  (only for test
\par }\pard \fi720\li2160\widctlpar\adjustright {\f2 purpose)
\par }\pard \widctlpar\adjustright {\f2  TOGGLE EPSILON\tab \tab introduce }{\strike\f2 eps-perturbation}{\v\f2 epsilon-perturbation}{\f2  or remove it
\par 
\par FAHNE\tab \tab \tab \tab write a flag of the matrix and show, where
\par }\pard \li2880\widctlpar\adjustright {\f2 are entries
\par }\pard \widctlpar\adjustright {\f2  DUMP MATRIX\tab \tab write the matrix to a graphic screen and put
\par }\pard \li2880\widctlpar\adjustright {\f2 a pixel at the screen, where you a non zero entry
\par }\pard \widctlpar\adjustright {\f2  STATUS\tab \tab \tab Write the status of the optimisation,
\par }\pard \fi720\li2160\widctlpar\adjustright {\f2 feasible or not, OBJF
\par }\pard \widctlpar\adjustright {\f2  MISCHEN\tab \tab \tab mix the columns (for test purpose only)
\par  BASIS OUT OF SLACKS AND ARTIFICIALS 
\par }\pard \li2880\widctlpar\adjustright {\f2 create a basis without structural vectors
\par }\pard \widctlpar\adjustright {\f2 EDIT
\par  VECTOR\tab \tab \tab you can enter a vector and get a screen with
\par }\pard \li2880\widctlpar\adjustright {\f2 description and you can browse through the matrix
\par }\pard \widctlpar\adjustright {\f2  PARAMETER\tab \tab \tab edit some }{\strike\f2 parameters}{\v\f2 parameter}{\f2 
\par  INFEASIBLE VECTORS\tab show all }{\strike\f2 infeasible vectors}{\v\f2 infeasibility}{\f2  with
\par }\pard \fi720\li2160\widctlpar\adjustright {\f2 the bounds and the actual value
\par }\pard \widctlpar\adjustright {\f2  DEMYSTIFIED SOLUTION\tab produce an output in which all entries are
\par }\pard \fi720\li2160\widctlpar\adjustright {\f2 listed with its actual values
\par }\pard \widctlpar\adjustright {\f2 COMMAND FILE\tab \tab process a }{\strike\f2 command}{\v\f2 command}{\f2  file
\par RESET PROBLEM
\par HELP\tab \tab \tab \tab this screen
\par EXIT
\par }{\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 solution-file-example}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $
}{Example of Solution File}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Example of Solution File}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{7}}}{\f2 
Example of a continuous solution (Extension *.LOS)
\par 
\par }{\f2\fs12 OPTIMAL SOLUTION
\par Weidenauer Optimiser Ver. 2.0          09.02.1995
\par 
\par Section 1 - ROWS
\par 
\par ...ROW..    AT  ...ACTIVITY...  SLACK ACTIVITY  ..LOWER LIMIT.  ..UPPER LIMIT.  .DUAL ACTIVITY
\par 
\par }{\f2\fs12\lang1040 OBJF        BS       279.55067      -279.55067            NONE            NONE         1.00000
\par CFXR        BS        29.36403         5.63597                        35.00000
\par CRNU        BS       176.26714        23.73286                       200.00000
\par FOXR        BS        96.29165        18.70835                       115.00000
\par NASU        BS        -1.83525         1.83525                         0.00000
\par VNSU        BS        -2.77621         2.77621                         0.00000
\par OBJF        $$      -279.55067            NONE            NONE
\par IDXR        UL        46.00000         0.00000            NONE        46.00000        -6.07719
\par VRSU        UL                                            NONE                       -49.67337
\par VGSU        UL                                            NONE                      -100.16730
\par GOSU        UL                                            NONE                      -103.23243
\par IREP        EQ         0.00000         0.00000         0.00000         0.00000  10000000.00000
\par VIGA        UL                                            NONE                        -1.61322
\par FREP        EQ         0.00000         0.00000         0.00000         0.00000  10000000.00000
\par TOSU        UL                                            NONE                      -705.88235
\par OHSU        UL                                            NONE                      -140.97647
\par SRSU        UL                                            NONE                       -52.80212
\par NAGA        UL                                            NONE                       -17.64706
\par CREP        EQ         0.00000         0.00000         0.00000         0.00000  10000000.00000
\par LRSU        UL                                            NONE                       -62.48362
\par SUGA        UL                                            NONE                       -14.36538
\par FDSU        UL                                            NONE                       -73.06513
\par 
\par }{\f2\fs12 Section 2 - COLUMNS
\par 
\par .COLUMNS    AT  ...ACTIVITY...  ..INPUT COST..  ..LOWER LIMIT.  ..UPPER LIMIT.  .REDUCED COST.
\par 
\par }{\f2\fs12\lang1040 CFMA        BS        29.36403       150.00000                            NONE
\par FDFO        BS        39.69870                                       200.00000
\par FOMA        BS        96.29165        70.00000                       200.00000
\par SGID        BS        39.42857                                            NONE
\par IDMA        BS        46.00000       105.00000                            NONE
\par HVU         BS        92.54025        -0.45000                       200.00000
\par }{\f2\fs12 DIST        BS       176.26714       -88.52000                       200.00000
\par NACF        BS        23.12417                                            NONE
\par SGFO        BS        13.09904                                       200.00000
\par SPLT        BS        31.19928        -0.20000                            NONE
\par VISB        BS        46.27012        -0.96000                       200.00000
\par FDID        BS         6.57143                                            NONE
\par TOCF        BS         6.23986                                            NONE
\par }{\f2\fs12\lang1040 VGFO        BS         6.47782                                            NONE
\par VRFO        BS        37.01610                                       200.00000
\par VNCF        LL                                                            NONE       -52.94118
\par SRFO        LL                                                            NONE        -7.16181
\par LRFO        LL                                                            NONE        -3.13090
\par }{\f2\fs12 VGID        LL                                                       200.00000       -29.97525}{\f2\fs16 
\par }{\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{integer-solution-file-example}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{
Integer-Solution-File-Example}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Example of Integer Solution}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{8}}}{
\f2 Example of an Integer-SOLUTION (Extension *.INT)
\par 
\par }{\f2\lang1036 INTEGER SOLUTION
\par 
\par CFMA                        28.81977          0.00000
\par CFXR                         6.18024          0.00000
\par CREP                         0.00000        150.00000
\par CRNU                        27.00000          0.00000
\par DIST                       173.00000        -32.27716
\par }{\f2 FDFO                        39.00000       -105.00000
\par FDID                         6.00000          0.00000
\par FDSU                         0.00000        105.00000
\par }{\f2\lang2070 FOMA                        95.00000          0.00000
\par FOXR                        20.00000          0.00000
\par FREP                         0.00000          0.00000
\par GOSU                         0.00000        105.00000
\par HVU                         90.00000          0.00000
\par IDMA                        44.55400          0.00000
\par }{\f2 IDXR                         1.44600          0.00000
\par IREP                         0.00000        105.00000
\par LRFO                         0.75889          0.00000
\par }{\f2\lang2070 LRSU                         0.06611          0.00000
\par NACF                        22.69556          0.00000
\par NAGA                         0.00000         17.64706
\par NASU                         1.80124          0.00000
\par OBJF                      -247.35051          0.00000
\par OHSU                         0.00000        140.97647
\par SGFO                        13.00000          0.00000
\par SGID                        38.55400          0.00000
\par SPLT                        30.62100          0.00000
\par SRFO                         0.00000          0.00000
\par }{\f2\lang3082 SRSU                         0.00000          0.00000
\par SUGA                         0.76620          0.00000
\par TOCF                         6.12420          0.00000
\par TOSU                         0.00000        705.88232
\par VGFO                         6.24111          0.00000
\par VGID                         0.00000       -105.00000
\par VGSU                         0.05889          0.00000
\par VIGA                         0.00000          0.00000
\par VISB                        45.00000          0.00000
\par VNCF                         0.00000         52.94118
\par VNSU                         2.70000          0.00000
\par VRFO                        36.00000          0.00000
\par }{\f2 VRSU                         0.00000          0.00000
\par 
\par Explanation
\par }\pard \fi720\widctlpar\adjustright {\f2 1. Column Vector
\par 2. Column Value of the best Solution found
\par 3. Column Dj of the best solution found
\par }\pard \li720\widctlpar\adjustright {\f2 4. If Vector is an integer Variable then follows the Charcter I
\par }\pard \widctlpar\adjustright {\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{command-file-example}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\super $}{Command File Example}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Command;Batch;Example}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{9}}}{
\f2 Example of a Command file (Extension *.CMD)
\par 
\par LOADMATRIX REFEX
\par LOADBASIS REFEX
\par MAXTIME 600
\par MAXITER 30000
\par DJ-MIN -1E-3
\par MAXIMISE
\par SAVEBASIS
\par GLOBAL
\par SAVEINTEGER
\par QUIT
\par }{\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{integer-search}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Integer-Search}}k
{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Integer-Search;Branch and Bound;Node Selection Problem;Bound Selection Problem}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\super n}{10}}}{\f2 Integer-Search
\par 
\par If a problem contains integer variables there are 3 possibilities:
\par 
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 1.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls3\adjustright {\f2 
Continuous problem is infeasible: No integer search required.
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 2.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls3\adjustright {\f2 
Continuous problem is unbounded: Integer search necessary
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 3.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls3\adjustright {\f2 
Continuous problem is optimal  : Integer search necessary
\par }\pard \widctlpar\adjustright {\f2 
\par The procedure during integer search is as follows:
\par 
\par START
\par take the continuous solution and test for integer feasibility of the specified variables.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 Yes: Solution found. Store }{\strike\f2 
OBJF}{\v\f2 objf}{\f2  as new cut-off-value. Store values and }{\strike\f2 DJ}{\v\f2 dj}{\f2  of all variables.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
NO : Select an integer variable which violates the integer condition and start a branch and bound process:
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }\pard \li720\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 Example: The variable A has in the continuous solution the value 2.5 Create two new problems with the following new }{\strike\f2 BOUNDS}{\v\f2 bounds}{\f2 
 A<=2 and A>=3 Solve the two problems and go to START
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }{\b\f2 CUT-OFF}{\f2 : If during integer search a node is infeasible this node can be excluded from further search process as the addition of a new constraint can never make an infeasible problem feasible.
\par 
\par Additionally the search process can be stopped at a node whose OBJF is worse that the up to now best found solution.
\par 
\par Example for integer-search for a maximisation problem:
\par }\pard \li720\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 Continuos solution OBJF 100 lower limit initialised to -1e30 (means that every integer solution is
\par better than this value) IF you find a solution with for example OBJF=60 then from that point in time you can cut all nodes with a OBJF worse than 60. Furthermore you can drop all waiting nodes with a worse OBJF.
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }{\b\f2 Variable-Select-Problem}{\f2 : If you have in your continuous problem more than one variable which viol
ates the integer condition you can choose the one or the other for the branch and bound process. You should select the variable which gives by branching the maximum deterioration in OBJF. But how can you know which variable gives that maximum ?
\par 
\par Exactly that is crucial for high efficiency in integer search.
\par A solution for this problem are }{\b\f2 pseudo-costs}{\f2 . From branching that variable in an earlier stage you know the difference in OBJF you achieved by branching in this variable. Then you divide that difference 
by the distance to integer value. This quotient is a measure for the importance of that variable in the search process.
\par }{\b\f2 Example:
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
OBJF of father 100, value of variable A 4.2
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
OBJF of son A<4 was 90 pseudocost down=(100-90)/(4.2-4)=50 
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 OBJF of son A>
5 was 95 pseudocost up  =(100-95)/(5-4.2)= 6.25
\par }\pard \widctlpar\adjustright {\f2 
\par For a more detailed view I refer to the literature:
\par 
\par Investigation of some branch and bound strategies for the solution of mixed integer linear programs
\par }\pard \fi720\widctlpar\adjustright {\f2\lang1040 G. Mitra, Math. Progr. 4, (1973), 155-170
\par }\pard \widctlpar\adjustright {\f2\lang1040 
\par Experiments in mixed-integer linear programming
\par }\pard \li720\widctlpar\adjustright {\f2\lang1040 M. Benichou, J. M. Gauthier, P. Girodet, G. Hentges, G. Ribiere and O. Vincent, Math. }{\f2 Progr. 1, (1971), 76-94
\par }\pard \widctlpar\adjustright {\f2 
\par }{\b\f2 Bound select problem:}{\f2  From my experience I propose to select the branch with the better OBJF first.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{inversion}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Inversion}}K{\footnote\ftnalt 
\pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Inversion;Bump}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{11}}}{\f2 Inversion-Routine of the optimiser
\par 
\par The inversion of the basis is sometimes necessary because:
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 1.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls8\adjustright {\f2 
Accumulation of round-off errors
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 2.\tab}}\pard \fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\ls8\adjustright {\f2 The }{\strike\f2 Basis}{
\v\f2 basis}{\f2  tends to fill in:
\par }\pard \li720\widctlpar\adjustright {\f2 That means the following: The matrix is internally stored in a }{\strike\f2 compact format}{\v\f2 compact-storage}{\f2 
: Only the elements<>0 are stored. During the inversion the rows (of the complete matrix) and columns (of the basis) are reordered that mainly a L-Matrix is achieved.
\par }\pard \widctlpar\adjustright {\f2 
\par    ( X                          )
\par    ( X X                        )
\par    }{\f2\lang2070 ( X X X A A A A              )
\par    ( X X X X A A A              )
\par    ( X X X X X A A              )
\par    ( X X X X X X A              )
\par    ( X X X X X X X              )
\par    ( X X X X X X X X            )
\par    ( X X X X X X X X X          )
\par    ( X X X X X X X X X 1        )
\par    ( X X X X X X X X X    1     )
\par    ( X X X X X X X X X      1   )
\par    ( X X X X X X X X X        1 )
\par          }{\f2 a       b     c
\par 
\par It is always possible to achieve such a structure. But unfortunately it is in the most cases not possible to avoid completely the entries above the main diagonal(A).
\par 
\par }{\b\f2 Literature: }{\f2 (H. M. Markowitz, Management Science 3, No. 3, 255-269 (1957).)
\par 
\par From this representation of the inverse one can write immediately the inverse:
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 1.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls5\adjustright {\f2 Step: From column 1 to a-1 create straight }{
\strike\f2 Etha-Vector}{\v\f2 etha-vector}{\f2 
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 2.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls5\adjustright {\f2 
Step: From b down to a apply the following procedure: Calculate the column (ftran) with all etha vector
s created in the second step: then create from this updated column an etha-vector. When you are at position 'a' the matrix is now completely L-structured. Then start at column 'a' and end at column 'b' with the following strategy: Update the column with a
ll etha-vectors created in step 2. create an etha vector from this vector.
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 3.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls5\adjustright {\f2 
Step:From column b+1 to c-1 create etha-vectors like in step 1
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 4.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls5\adjustright {\f2 
Step: from column c to end of basis the vectors have only a single entry. If this entry <>1 then create a pivot element from it otherwise skip this vector.
\par }\pard \widctlpar\adjustright {\f2 
\par Additionally one can try to rearrange the square piece of the matrix (A). This square is characterised that every row and every column has inside of this square at least 2 entries. But sometimes it is possible 
to split the large square in 2 ore more small squares (Partitioning)
\par }{\b\f2 Literature:}{\f2  E. Hellermann, D. Rarick, Math. Progr. 1, 195-216 (1971).
\par 
\par 
\par XX     This small 6*6 matrix has 3 so called Bumps: the small corners
\par XX     which are above the diagonal. By using this kind of sorting
\par XXXX   you get much lower fill ins than in the unsorted case
\par XXXX
\par XXXXXX
\par XXXXXX
\par 
\par During the iteration you add etha-vectors to the so called 'etha-file' (Because this etha-vectors were filed in earlier computers)    which need memory s
pace. Additionally, if you update columns with this grown etha-file the vectors tend to fill in also. This increases memory requirements for the storage of the etha-vectors but much worse it also increases the effort necessary through the column updating.

\par 
\par At a certain point in time is better to spend some time with inversion and then have a faster column updating and pricing than not to invert and have larger time for updating. As a rule of thumb the optimiser should spend about 1/3 of its time with invers
ion. From my experience this rule gives fastest optimisation.
\par }{\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{etha-vector}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Etha Vector}}k
{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Etha-Vector;Literature}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{12}}}{\f2 ETHA-Vector
\par 
\par You call an etha vector a square matrix with the following structure: this kind of matrices are created through the }{\strike\f2 LR-decomposition}{\v\f2 lr-decomposition}{\f2  of square matrices (Basis) or through column exchange during pivoting.
\par 
\par p=Pivot-Element
\par x=entry of the column in the Matrix
\par     }{\f2\lang2070 ( 1            -x/p             ) 
\par     (     1        -x/p             ) 
\par     (         1    -x/p             )
\par eta=(            1 -x/p             )
\par     }{\f2 (               1/p             )  Pivot-row
\par     (              -x/p  1          )
\par     (              -x/p      1      )
\par     (              -x/p          1  )
\par 
\par As the matrix contains outside one column and the main diagonal only blanks and the one columns may have blanks as well it makes also  sense, to store the etha-vector in a compact format.
\par 
\par You needn't so store the matrix: It is only necessary to store the  nonzero entries of the pivot column and to store the pivot row. Additionally it is not necessary to perform the 'expensive' division.
\par It is faster to perform the division only once during the pricing and the column updating procedure.
\par 
\par }{\b\f2 Literature:}{\f2  J. J. H. Forrest and J. A. Tomlin, Math. Prog. 2, 263-278 (1972)
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{epsilon-perturbation}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Epsilon Perturbation
}}k{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Epsilon Perturbation}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{13}}}{\f2 Epsilon Perturbation
\par 
\par The most matrices consist of }{\strike\f2 RHS}{\v\f2 rhs}{\f2  with most zero entries. That leads to many }{\strike\f2 iterations}{\v\f2 iteration}{\f2 , which don't improve the objective function }{\strike\f2 obj}{\v\f2 objf}{\f2 
. With that perturbation a vector is added to the }{\strike\f2 RHS}{\v\f2 rhs}{\f2  column to remove this behaviour. Unfortunately the number of infeasibilities at the beginning of the iteration is in the most cases equal to the number of rows of the
 problem. Hence you must perform at least nrow iterations to get a feasible basis. On top of that you have to continue optimising. But the perturbation gives an increase in numerical stability. After finishing the iteration the perturbation has to be remo
ved which leads to some additional iterations.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{compact-storage}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Compact Storage}}k
{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Compact Storage}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{14}}}{\f2 Compact Storage
\par 
\par The matrix is internally stored in a compact format:
\par Only the row number (2 byte(4 Byte in Delphi-version)) and the number is stored (8 Bytes)
\par 10(12) bytes total for a single matrix entry
\par 
\par As LP-matrices are often very sparse you have two advantages of this storage:
\par 1. less memory for the matrix
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 2. \tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec\pnb0\pni0\pnf2\pnfs20\pnstart2\pnindent283\pnhang{\pntxta . }}\ls6\adjustright {\f2 Gain i
n speed, because you have only to compute with numbers <>0
\par }\pard \widctlpar\adjustright {\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{basis}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\lang1043\super $}{\lang1043 Basis}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1043\super K}{\lang1043 Basis}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\lang1043\super n}{\lang1043 15}}}{\f2 Basis
\par 
\par For a n*n matrix you call a basis a set of n linear independent vectors For LP you add the status of non basis variables (whether on upper or lower bound)
\par 
\par The basis contains all information about the current status of the iteration. That's the reason for the use of a starting basis from a previous optimisation to speed up the optimisation
\par 
\par A basis is called a feasible basis, if all variables are within their bounds. 
\par A basis is called an optimal basis if it is a feasible basis and there are no more columns with a negative }{\strike\f2 DJ}{\v\f2 dj}{\f2 
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1043\super #}{\lang1043 dj}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1043\super $}{\lang1043 
DJ}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{DJ}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{16}}}{\f2 DJ
\par 
\par The DJ is a number which gives the improvement of the }{\strike\f2 OBJF}{\v\f2 objf}{\f2 , if the value of a non basis variable is moved by one away from its bound (into the }{\strike\f2 basis}{\v\f2 basis}{\f2 )
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{objf}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Objective Function}}k
{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Objective Function}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{17}}}{\f2 OBJECTIVE-FUNCTION
\par 
\par OBJECTIVE-FUNCTION is the name of a row in the matrix which contains the entry for the price coefficients. It is a row without a limit and therefore type 'N'. In a lp-problem at least one N-ROW is required.\page }{\cs18\f2\super #{\footnote\ftnalt 
\pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{parameter}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Parameter}}k{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright 
\fs20\lang2057\cgrid {\cs18\super k}{ Parameter;iterlog;logfile;pricing;such-tiefe;relativ;basis_intervall;DJ-min;maxiter; MAX-TIME; LO_LIMIT; UP_LIMIT; TIGHT; ASSESS-PSE; RESTART; PSE; STRAT-1; STRAT-2}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{18}}}{\f2 PARAMETER
\par }\pard \fi-2835\li2835\widctlpar\tx1701\tx2835\adjustright {\f2 
\par Para.\tab Typical\tab Explanation
\par 
\par ITERLOG\tab 0\tab Number of Iterations, which are written on top of each other until a line feed is printed. A value of 0 gives a line only after inversion. During Integer search no output after an inversion.
\par LOGFILE\tab Y\tab During the iteration process the progress is logged in the file LP.LOG
\par PRICING\tab 16000     maximal Number of negative _DJ\rquote s for the partial pricing procedure.
\par SUCH-TIEFE 6\tab When performing branch and bound one can either follow each node until infeasible of cutoff or one can stop the search after a certain number of nodes. IF you follow each node to its end, it is possibl
e that you perform a lot of calculations and produce waiting nodes which will be cutoff anyway during optimization. You can overcome this problem by stopping the search after maybe 6 nodes and then continue with the waiting node with the best objf. It dep
ends on the model, where to set this parameter.
\par RELATIV\tab 0.98     IF a vector is a potential candidate for entering the basis, the DJ of this vector must have at least the value of relative*average DJ of the last 10 iterations The higher this parameter is th
e less iterations are necessary (normally, but is some cases it can be useful to reduce this parameter to, say, 16) By playing with this parameter there is a rule of thumb: The higher the parameter the less number of Iterations and the more effort for pri
cing.
\par BASIS_INTERVALL 0\tab Every n iterations the current basis is saved. 0 means: No basis save at all
\par DJ_MIN\tab -1E-6\tab All DJ's greater than DJ_MIN are treated as 0
\par MAXITER\tab 2E9\tab Maximal number of iterations. If this number is passed the optimiser stops with the message too many iterations
\par MAX-TIME\tab 1E9\tab Maximal time in seconds
\par LO_LIMIT\tab -1E30\tab During integer search this is the lower limit within a integer solutions is searched.
\par UP_LIMIT\tab 1E30\tab During integer search this is the upper limit within a integer solutions is searched.
\par TIGHT\tab N\tab IF the option is chosen, I try to tight the Integerproblem before starting the branch and bound process. This "can" save time but has to be considered with care. This calculation can on models with dense matrices last for a long time and m
ay need more time then the potential savings. IF the matrix is changed during this process, I write a }{\strike\f2 compression file}{\v\f2 compression}{\f2  *.CMP which contains a listing of the changes
\par ASSESS-PSE\tab Y\tab If during integer search you can branch on a vector for which no pseudo-cost exists, the program tries to estimate this pseudo-cost.
\par RESTART\tab Y\tab During integer search all vectors get a pseudo cost. IF for a specific vector no such cost was known from previous search it gets in the screen output in column pseudo a plus chara
cter '+'. If the number of such vectors increases a certain threshold the integer search is restarted with the new pseudo costs. This action may reduce the solution time for hard problems significantly.
\par PSE\tab Y\tab Use pseudocosts in branch and bound
\par }\pard \widctlpar\adjustright {\cs18\f2\super \page #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{Infeasibility}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $
}{Infeasibilty}}k{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Infeasibility}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{19}}}{\f2 INFEASIBILITIES
\par 
\par A model is called 'INFEASIBLE' if it contains restrictions which contradict each other e.g.
\par 
\par a>5
\par a<4
\par 
\par It is clear that for all values of 'a' at least one of these constraints is violated.
\par 
\par During the optimisation process it may happen, that some variables have a value outside their }{\strike\f2 bounds}{\v\f2 bounds}{\f2  . The program sees that and tries to move the value between the bounds. I use the following strategy to reach that:

\par 
\par {\pntext\pard\plain\f2\fs20\lang2057\cgrid \hich\af2\dbch\af0\loch\f2 1.\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec\pnstart1\pnindent283\pnhang{\pntxta .}}\ls7\adjustright {\f2 value is above the upper bound
\par }\pard \li720\widctlpar\adjustright {\f2 
The value has to get lower.this is achieved by assigning a very high negative number as OBJF coefficient. during the optimisation it is checked whether the value is now in the allowed range. If the check is OK, the original value of the OBJF is restored
 and an infeasibility is removed.
\par }\pard \widctlpar\adjustright {\f2 
\par 2. value is below lower bound
\par }\pard \li720\widctlpar\adjustright {\f2 If a upper bound exists, the procedure is similar to the above mentioned case only with other sign of the OBJF. entry. However, if the upper bound is at its maximum possible value of 1E30, yo
u have a problem. The procedure must be revised as follows:
\par }\pard \widctlpar\adjustright {\f2 
\par }\pard \li720\widctlpar\adjustright {\f2 You assign a upper bound of the lower bound. The variable is now forced to reach the upper bound. If the variable has this value, the variable is set to lower bound, and the upper bound is remove
d. Also the OBJF-entry is restored.
\par }\pard \widctlpar\adjustright {\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{rhs}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{
RHS Right-Hand-Side}}k{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super k}{rhs, right-hand-side}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1031\super n}{\lang1031 20}
}}{\f2 RHS (Right Hand Side)
\par 
\par This is the name for the columns of the matrix, in which the value of the constraints are stored.
\par 
\par Example : X+3*Y<6   The RHS of this row is 6.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1031\super #}{\lang1031 problem}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1031\super $}{
\lang1031 Problem Definition}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Problem Definition}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{21}}}{\f2 
ROBLEM
\par 
\par In this screen some properties of the read matrix are specified: }{\strike\f2 OBJF}{\v\f2 objf}{\f2  means the name of the }{\strike\f2 N-type}{\v\f2 row-type}{\f2  row, which shall be used for opti
mising If not specified the optimiser takes the first N-row it sees through reading.
\par 
\par }{\strike\f2 BOUND}{\v\f2 bounds}{\f2  defines the name of the bound for the desired problem. If not specified the optimiser takes the first bounds-set it sees through reading.
\par 
\par Same for }{\strike\f2 RHS}{\v\f2 rhs}{\f2  and }{\strike\f2 RANGE}{\v\f2 ranges}{\f2 
\par 
\par see also }{\strike\f2 MPSX-Format}{\v\f2 mpsx-format-in}{\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{files-used-and-created}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Files used and created}}k{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super k}{\lang1036 Files}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 22}}}{\f2 Files used and created
\par 
\par This LP-Solver uses the following files:
\par 
\par LP.EXE\tab Executable
\par LP.PAR\tab }{\strike\f2 Parameters}{\v\f2 parameter}{\f2  used for configuration
\par LP.HLP\tab The file you are currently reading
\par 
\par IF you are using a matrix name then the program creates some other files. The extensions and their meaning are as follows:
\par 
\par }{\f2\lang1036 MAT   Matrix in columnwise }{\strike\f2\lang1036 MPSX-Format}{\v\f2\lang1036 mpsx-format-in}{\f2\lang1036 
\par }{\f2 LP    Matrix in            }{\strike\f17 Row-wise format}{\v\f2 row-wise-in}{\f2 
\par BSS   Basis  in my format  }{\strike\f2 Basis file}{\v\f2 basis}{\f2 
\par 
\par }{\f2\lang1036 CMP\tab }{\strike\f2\lang1036 Compression}{\v\f2\lang1036 compression}{\f2\lang1036 
\par LOS\tab }{\strike\f2\lang1036 Solution file}{\v\f2\lang1036 solution-file-example}{\f2\lang1036 
\par }{\f2 LOC\tab }{\strike\f2 Solution file in CSV-format}{\v\f2 solution-CSV}{\f2 
\par INT   }{\strike\f2 Integer solution file}{\v\f2 integer-solution-file-example}{\f2 
\par INC   }{\strike\f2 Integer solution file in CSV-format}{\v\f2 integer-solution-CSV}{\f2 
\par INF\tab IF the matrix is infeasible then this file contains all
\par       }{\strike\f2 infeasible vectors}{\v\f2 infeasible-file}{\f2 
\par 
\par If you save a }{\strike\f2 integer-search}{\f2 -tree, 4 files are created:
\par INF\tab Information about current status
\par BOU\tab Bounds used (}{\strike\f2 Binary-File}{\v\f2 binary-file}{\f2 )
\par FIL\tab Information about the }{\strike\f2 nodes}{\v\f2 nodes}{\f2  (active or already solved)
\par }\pard \li720\widctlpar\adjustright {\f2 bounds used basis for the node ... (Binary file)
\par }\pard \widctlpar\adjustright {\f2 WAI\tab List of all nodes sorted after objf (Binary file)
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 compression}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{
\lang1036 Compression}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super K}{\lang1036 Compression;TIGHT}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\lang1036\super n}{\lang1036 23}}}{\f2 Compression
\par IF parameter }{\strike\f2 TIGHT}{\v\f2 parameter}{\f2  is set on yes after reading of the matrix a file is created which contains a listing of the actions performed
\par during compression.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 Remove Entries with coefficient of zero 

\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
Replace a row with only one element by a bound on this vector
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
Remove all entries of Vectors with a fixed bound from the matrix and modify RHS accordingly 
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
Set Bound on Integervariables to integer value: 
\par }\pard \li720\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 UP 3.5  --> 3
\par LO 2.5  --> 3
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
Calculate bounds on variables from rows and rhs entries.
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par This is done until no more modifications are possible.
\par 
\par }{\strike\f2 Example of compression file}{\v\f2 example-compression}{\f2 
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 example-compression}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 Compression File}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 24}}}{\f2 Example of Compression File
\par 
\par IN COLUMN x_____16   Entry at row GL44       was 0
\par REPLACE ROW BK10       By a UP Bound on Column VBA        0.7
\par REPLACE ROW R1____25   By a LO Bound on Column x_____25   38
\par REPLACE UP Bound on Column VBI from 7.9 by 7
\par COLUMN VBH has a fixed bound of 0
\par PA LO BOUND changed from 0 to 7
\par PW UP BOUND changed from 1E21 to 7.59398E18
\par COLUMN VBIH has a fixed bound of 0\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 compiler}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 Compiler}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super K}{\lang1036 Compiler}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 25}}}{\f2 Compiler
\par The DOS-DPMI-Version of this Program was compiled with BORLAND PASCAL Version 7.0.
\par The WINDOWS 95, 98, NT-Version of this Program was compiled with BORLAND DELPHI Version 4.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 ranges}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 Ranges}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super K}{\lang1036 Range}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 26}}}{\f2 RANGES
\par 
\par A range is a possibility to enter two rows with equal coefficients but different }{\strike\f2 RHS}{\v\f2 rhs}{\f2  as one row. This saves matrix size.
\par 
\par Example : X+3*Y<6   The RHS if this constraint is 6.
\par           X+3*Y>2   The RHS if this constraint is 2.
\par 
\par These two rows may be formulated as:
\par 
\par            X+3*Y>2   &   Range=4
\par or         X+3*Y<6   &   Range=4
\par 
\par This kind or formulation creates inside the optimiser a slackvariable with an upper bound.\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {
\cs18\lang1036\super #}{\lang1036 bounds}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 Bounds}}k{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super k}{\lang1036 Bounds}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super n}{\lang1036 27}}}{\f2 Bounds
\par 
\par If a problem contains restriction with a single column, one can store this restriction outside the matrix and save a row and a slack or artificial (increase in performance)
\par 
\par Example:
\par 
\par A<3\tab \tab \tab \tab --> upper Bound 3               UP
\par A>2\tab \tab \tab \tab --> lower Bound 2               LO
\par A=2.5\tab \tab \tab \tab --> fixed Bound 2.5             FX
\par A>-1e30 & A<1e30\tab \tab --> free  Bound                 FR
\par 0 or 1\tab \tab \tab --> Binary                      BV
\par INTEGER\tab \tab \tab --> Integer with an upper bound UI
\par 0 or >=1\tab \tab \tab --> Semi continuous             SC
\par Special ordered Set\tab -->                             S1 }{\strike\f2 SOS}{\v\f2 sets}{\f2 
\par Special ordered Set\tab -->                             S2 }{\strike\f2 SOS}{\v\f2 sets}{\f2 
\par 
\par The bounds for a variable are not limited. For example a variable may have a lower bound of -5 and an upper bound of -1, or two different signs. But the lower bound must be below the upper bound.
\par 
\par If you have free variables in the matrix you can encounter the following problem: If such a variable is in the non-basis part of the matrix it has to be on its bounds. But a bou
nd of -1e30 causes severe numerical problems with round-off errors. Therefore the lower bound is set to 0 and I try to move this column into the basis by pivoting. If it is once in the basis the bounds are set to -1e30 and 1e30 and they can't leave the ba
sis anymore.
\par 
\par During the }{\strike\f2 crash}{\v\f2 crash}{\f2  procedure I try to move all free columns into the basis.\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {
\cs18\lang1036\super #}{\lang1036 sets}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Special ordered sets}}k{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super k}{SOS-1;SOS-2}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super 
n}{28}}}{\f2 SOS Special ordered Sets Type 1 or 2
\par 
\par A special ordered set-1 means the following: A number of binary variables, of which exactly one is equal 1 and all others are zero.
\par Typical application is in scheduling, when only one plant out of two is running or in planning if you start a project in week one or week two but not in both weeks.
\par 
\par A special ordered set-2 means the following: A set of variables with a sum of one at least one and at most two variables have a value of nonzero. If two variables are nonzero then they have to be neighbours of each other. The RHS of one to this equa
lity constraint and the upper bounds of one of all members of this set are added by the solver)
\par 
\par Typical application is the modelling of non-linear operating lines or nonconvex feasible region (piecewise linear)
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{About}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec 
}\adjustright \fs20\lang2057\cgrid {\cs18\super $}{ About}} K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{About}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{29}}}{\f2 ABOUT
\par This program was written by
\par 
\par }{\f2\lang1031 Markus Weidenauer
\par An der Grauen Burg 7
\par }{\f2 53332 Bornheim
\par Germany
\par 
\par Tel.: +49 2227 904780
\par 
\par email: weidenauer@netcologne.de
\par http://www.mynetcologne.de/~nc-weidenma/index.htm
\par 
\par If you use this program, send me a mail and tell me your experience. I am very interested in receiving comments on performance and stability of the optimiser. If you encounter problems with set-up or solving examples don't hesitate to contact me.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{ row-wise-in}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0
\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{ Row-wise-format}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Row-wise-Format}}n{\footnote\ftnalt 
\pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1031\super n}{\lang1031 30}}}{\f2 Row-wise Format
\par File name *.LP
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 A # at the begin  of a
 line means comment: The rest of the line will be ignored
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
The length of a row is limited by 250 chars. Longer lines should be split.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
The end of a row is defined by a semicolon ';'
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 Row-wise formulation of the problem
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li1003\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 1. row contains }{\strike\f2 
Objective-Function}{\v\f2 objf}{\f2  and the direction of the Optimisation:
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li1723\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 MAX:  A+3*b;   !OBJF    #
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li1003\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 2. ROW: Constraint
\par }\pard \li720\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2      }{\f2\lang2070 MAX_A:   A<5;
\par      }{\f2\lang1031 MIN_SUM: a+b>3;
\par      DEMAND:  b=5;
\par    :ENDE
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2\lang1031    }{\f2 Then possibly }{\strike\f2 BOUNDS}{\v\f2 bounds}{\f2 , }{\strike\f2 RANGES}{\v\f2 ranges}{\f2 , }{\strike\f2 Sets}{\v\f2 sets}{\f2  Syntax same as MPSX Format

\par    ENDATA
\par 
\par The naming convention is according to programming languages:
\par 1. Character is a letter from the following set ['A'..'Z','a'..'z','_'], the following characters are any of ['A'..'Z','a'..'z','_','0'..'9']
\par The length of a name is limited to 25 chars.
\par 
\par }{\strike\f2 Example}{\v\f2 row-wise-example}{\f2 
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1031\super #}{\lang1031 mpsx-format-in}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 MPSX Format}}k{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super k}{\lang1036 MPSX;Column-wise}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{31}}}{\f2 MPSX Format
\par 
\par NAME          ---------
\par ROWS
\par  N  ---------
\par  G  ---------
\par  }{\f2\lang2070 L  ---------
\par  E  ---------
\par COLUMNS
\par     ----------//////////------------   ----------///////////
\par }{\f2 RHS
\par     ----------//////////------------   ----------///////////
\par BOUNDS
\par  -- ----------//////////------------   if up, lo, fx, ui, li, mi, sc
\par  -- ----------//////////               ----------   if s1 or s2
\par RANGES
\par     ----------//////////------------   ----------///////////
\par ENDATA
\par 
\par There is the additional condition that variable names should not contain spaces. There is no condition for the ordering of the columns is the column section. They may be in mixed order. The standard MPSX formats doesn't
\par allow the following notation:
\par    }{\f2\lang2070 COLUMNS
\par        A           R1            5
\par        B           R1            5
\par        A           R2            3
\par        }{\f2 B           R2            -1
\par 
\par    The following MPSX codes are supplied:
\par    ROWS,  COLUMNS
\par    RHS,   }{\strike\f2 BOUNDS}{\v\f2 bounds}{\f2  }{\strike\f2 RANGES}{\v\f2 ranges}{\f2  SETS0910
\par 
\par In the COLUMNS or RHS Section as many entries are allowed which fit into one line (255 chars)
\par    }{\f2\lang2070 COLUMNS
\par     X R1 5 R2 10 R4 10 R6 10 OBJF 10 ...
\par 
\par    }{\f2 In the }{\strike\f2 BOUNDS}{\v\f2 bounds}{\f2  section the following codes are allowed:
\par    FIX   (FX)   -->   Var =Value
\par    LOWER (LO)   -->   Var>=Value
\par    UPPER (UP)   -->   Var<=Value
\par    FREE  (FR)   --> -1E20<=value<1E20
\par 
\par When Integer Programming is wanted there are some other bound types:
\par 
\par Description\tab \tab BOUND\tab Explanation
\par Binary\tab \tab \tab BV\tab \tab 0 or 1
\par INTEGER\tab \tab \tab UI\tab \tab Integer with an upper bound
\par Semi continuous\tab SC\tab \tab 0 or >=1
\par Special ordered Set\tab S1\tab \tab }{\strike\f2 SOS-1}{\v\f2 sets}{\f2 
\par Special ordered Set\tab S2\tab \tab }{\strike\f2 SOS-2}{\v\f2 sets}{\f2 
\par 
\par The bounds for a variable are not limited. For example a variable may have a lower bound of -5 and an upper bound of -1, or two different signs. But the lower bound must be below the upper bound.
\par }{\strike\f2 Example}{\v\f2 mpsx-example}{\f2 
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{row-wise-example}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Row-wise Example}}k{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {
\cs18\super k}{Example row-wise-format}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{32}}}{\f2 Example of a matrix in LP-Format (Extension *.LP)
\par 
\par REFEX.LP
\par 
\par MAX: +150*CFMA-88.52*DIST+70*FOMA-0.45*HVU+105*IDMA-0.2*SPLT-0.96*VISB;
\par CREP: +CFMA-NACF-TOCF-VNCF=0;
\par FDSU: +FDFO+FDID-0.5*HVU<0;
\par FREP: -FDFO+FOMA-LRFO-SGFO-SRFO-VGFO-VRFO=0;
\par }{\f2\lang3082 GOSU: -0.298*DIST+SGFO+SGID<0;
\par IREP: -FDID+IDMA-SGID-VGID=0;
\par }{\f2\lang1031 LRSU: -0.525*DIST+HVU+LRFO<0;
\par NAGA: +8.5*NACF-31.5*TOCF+11.5*VNCF<0;
\par }{\f2\lang2070 NASU: +NACF-0.8*SPLT<0;
\par VRSU: -0.8*VISB+VRFO<0;
\par OHSU: -0.177*DIST+SPLT<0;
\par SRSU: -0.5*HVU+SRFO+VISB<0;
\par SUGA: +1.8*FDID-0.3*SGID+2*VGID<0;
\par TOSU: -0.2*SPLT+TOCF<0;
\par VGSU: +VGFO+VGID-0.14*VISB<0;
\par VIGA: -1.9*FDFO+6.6*LRFO-20.6*SGFO+15.1*SRFO-18.7*VGFO+12.6*VRFO<0;
\par VNSU: -0.06*VISB+VNCF<0;
\par :ENDE
\par }{\f2 BOUNDS
\par  UP BOUND     CFMA          35.00000
\par  UI BOUND     DIST         200.00000
\par  UI BOUND     FDFO         200.00000
\par  UI BOUND     FOMA         115.00000
\par  UI BOUND     HVU          200.00000
\par  UP BOUND     IDMA          46.00000
\par  UI BOUND     SGFO         200.00000
\par  UI BOUND     VGID         200.00000
\par  UI BOUND     VISB         200.00000
\par  UI BOUND     VRFO         200.00000
\par ENDATA
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{mpsx-example}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0
\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{MPSX Example}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{MPSX-Example}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{33}}}{\f2 Example of a matrix in MPSX-Format (Extension *.MAT)
\par 
\par NAME          REFEX
\par ROWS
\par  }{\f2\lang2070 N  OBJF
\par  E  CREP
\par  L  CRNU
\par  L  FDSU
\par  L  FOXR
\par  E  FREP
\par  L  GOSU
\par  L  IDXR
\par  E  IREP
\par  L  LRSU
\par  L  NAGA
\par  }{\f2\lang3082 L  NASU
\par  L  VRSU
\par  }{\f2\lang1031 L  OHSU
\par  L  SRSU
\par  }{\f2\lang3082 L  SUGA
\par  L  TOSU
\par  L  VGSU
\par  L  VIGA
\par  L  VNSU
\par  L  CFXR
\par COLUMNS
\par     CFMA      OBJF         150.00000   CREP       1.00000
\par     CFMA      CFXR           1.00000
\par     DIST      OBJF         -88.52000   OHSU      -0.17700
\par     }{\f2 DIST      GOSU          -0.29800   LRSU      -0.52500
\par     DIST      CRNU           1.00000
\par     FDFO      FREP          -1.00000   FDSU       1.00000
\par     FDFO      VIGA          -1.90000
\par     FDID      IREP          -1.00000   FDSU       1.00000
\par     }{\f2\lang2070 FDID      SUGA           1.80000
\par     FOMA      OBJF          70.00000   FREP       1.00000
\par     FOMA      FOXR           1.00000
\par     HVU       OBJF          -0.45000   FDSU      -0.50000
\par     }{\f2\lang1031 HVU       SRSU          -0.50000   LRSU       1.00000
\par     IDMA      OBJF         105.00000   IREP       1.00000
\par     IDMA      IDXR           1.00000
\par     }{\f2 LRFO      FREP          -1.00000   LRSU       1.00000
\par     }{\f2\lang2070 LRFO      VIGA           6.60000
\par     NACF      CREP          -1.00000   NASU       1.00000
\par     NACF      NAGA           8.50000
\par     SGFO      FREP          -1.00000   GOSU       1.00000
\par     SGFO      VIGA         -20.60000
\par     SGID      IREP          -1.00000   GOSU       1.00000
\par     SGID      SUGA          -0.30000
\par     SPLT      OBJF          -0.20000   OHSU       1.00000
\par     SPLT      TOSU          -0.20000   NASU      -0.80000
\par     SRFO      FREP          -1.00000   SRSU       1.00000
\par     SRFO      VIGA          15.10000
\par     TOCF      CREP          -1.00000   TOSU       1.00000
\par     TOCF      NAGA         -31.50000
\par     VGFO      FREP          -1.00000   VGSU       1.00000
\par     }{\f2\lang3082 VGFO      VIGA         -18.70000
\par     VGID      IREP          -1.00000   VGSU       1.00000
\par     VGID      SUGA           2.00000
\par     VISB      OBJF          -0.96000   VNSU      -0.06000
\par     VISB      VGSU          -0.14000   VRSU      -0.80000
\par     VISB      SRSU           1.00000
\par     VNCF      CREP          -1.00000   VNSU       1.00000
\par     VNCF      NAGA          11.50000
\par     VRFO      FREP          -1.00000   VRSU       1.00000
\par     VRFO      VIGA          12.60000
\par RHS
\par     RHS       CFXR          35.00000   IDXR      46.00000
\par     }{\f2\lang1036 RHS       CRNU         200.00000   FOXR      15.00000
\par }{\f2 BOUNDS
\par  UI BOUND     DIST         200.00000
\par  UI BOUND     FDFO         200.00000
\par  UI BOUND     FOMA         200.00000
\par  UI BOUND     HVU          200.00000
\par  UI BOUND     SGFO         200.00000
\par  UI BOUND     VGID         200.00000
\par  UI BOUND     VISB         200.00000
\par  UI BOUND     VRFO         200.00000
\par ENDATA
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{basis-format}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0
\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Basis-Format}}k{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super k}{Basis-Format}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{34}}}{\f2 Basis
\par 
\par In the 1. line is the name of the matrix to which that basis belongs.
\par The last is ENDATA
\par In the other lines the 1. char is a space then follows:
\par X with a list of basisvectors
\par U with a list of nonbasisvectors at upper bound
\par   Vectors not mentioned are OBJF (always last Basis vector)
\par                         NON-basic at lower bound
\par }{\strike\f2 Example}{\v\f2 basis-example}{\f2 
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{basis-example}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Basis Example}}k{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {
\cs18\super k}{Basis;OBJF;lower-bound}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{35}}}{\f2 Example of a basis file  (Extension *.BSS)
\par (.MAT
\par  X DESUPMP X DESUPLP X HOT-OIX X GTNATGAS X GTHEL
\par  X GTBUTAN X T1B1 X F-5401B1 X STROMB2 X K7B1
\par  X K6B1 X K5B1 X K51 X K61 X K4B1
\par  }{\f2\lang1043 X K4-PR-U X K71 X K3B1 X K31 X F-5401GREFU
\par  }{\f2 X F-5401-HP X FEEDPREP X DESUPHP X STROMB1 X COND
\par  X K3LREFU X T1-PR X T4_MP-U X T11 X WSBIN
\par  X SP-WA X GTS X K4LREFU X GT1 X K5GREFU
\par  }{\f2\lang1036 X T34 X I-DE-P X T3B2 X K7LREFU X K7GREFU
\par  X T4_HP-U X WS-PR-U X I-HE-P X T31 X ABSP-MP
\par  X WSGREFU X K3GREFU X T2_COS X T3-PR X T4_PR-U
\par  }{\f2\lang1031 X K6LREFU X T2_LP X K6GREFU X HEAT-E X T3B3
\par  X T2B X T33 X GT-STROM X K5LREFU X GTB1
\par  X K4GREFU X PR-B X HICO X WASSER X PVE-WASSER
\par  X PLREFU1 X PGREFU1 X MW1 X WS-MIN X WS-MA
\par  X T4 X T34 X T2-MIN X HICOCAP X T12
\par  }{\f2\lang1043 X F-54011 X K71 X K61 X K51 X K41
\par  X K31 X STROM1_BI X MW-TOT X GTB2
\par  U F-5401B2
\par  U CONDB U PNATGAS1 U SSTROM2 U T1B2 U T1_PR-U U B_HEL U T2_HP U B_DESPWA
\par  }{\f2\lang3082 U B_COND U B_BUTAN U T3B4 U T4B U _2
\par ENDATA
\par }{\f2\lang1033 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{command}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Command}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{
Command; Batch}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{36}}}{\f2 COMMAND-FILE
\par }\pard\plain \s15\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\f2 
\par }\pard\plain \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\f2 
With a Command-File you can steer the optimise from command line or you can call the unit go_lp from another program of your own. This command file may contain many commands which allow nearly any option from the menu system to be called from a batch.

\par 
\par Allowed commands:
\par Define Problem
\par   OBJF   NAME            : Objective function NAME
\par   RHS    NAME            : Right Hand Side    NAME
\par   BOUND  NAME            : Bounds             NAME
\par   RANGE  NAME            : Range              NAME
\par 
\par Load
\par   LOADMATRIXFORMATTED    : Matrix *.MAT in }{\strike\f2 MPSXformat}{\v\f2 mpsx-formatted-in}{\f2  is read after a fileselect
\par   LOADMATRIX             : Matrix *.MAT in }{\strike\f2 MPSX}{\v\f2 mpsx-format-in}{\f2  Format is read after a fileselect
\par   LOADMATRIX NAME        : Matrix NAME.MAT in }{\strike\f2 MPSX}{\v\f2 mpsx-format-in}{\f2  is read
\par   LOADLP                 : Matrix *   .LP in LP Format is read after a fileselect
\par   LOADLP NAME            : Matrix NAME.LP  in LP Format is read
\par   LOADBASIS              : BASIS  *   .BSS Basis is read after a fileselect
\par   LOADBASIS NAME         : BASIS  NAME.BSS in Basis is read
\par 
\par Do anything
\par   MAXIMISE               : Start the optimisation direction max.
\par   MINIMISE               : Start the optimisation direction min
\par   GLOBAL                 : Start search for global Integerextremum
\par   INVERT                 : Force an inversion
\par 
\par Parameters
\par   MAXITER                : Maximum number of iterations
\par   MAXTIME                : Maximum time for computation (s)
\par   SUCH                   : Search-Depth for Integer search
\par   DJ-MIN                 : DJ-Limit
\par   CUTOFF VALUE           : Limits possible integer solution to
\par                            Continuous solution - Value
\par                            If value is not given then lo and up-limit of
\par                            the potential solutions are set to 1e30 and -1e30.
\par   LIMIT VALUE            : Limits possible integer solution to Value
\par                            If value is not given then lo and up-limit of
\par                            the potential solutions are set to 1e30 and -1e30.
\par Save
\par   SAVELP                 : Save matrix in LP-format
\par   SAVEMAT                : Save Matrix in MPSX-format
\par   SAVEXPRESS             : Save Matrix in XPRESS-format
\par   SAVESOLUTION           : Save Solution to File NAME.LOS
\par   SAVESOLUTIONCSV        : Save Solution to File NAME.LOC as Semicolon    separated file
\par   SAVEINTEGER            : Save Integersolution as NAME.INT
\par   SAVEINTEGERCSV         : Save Integersolution as NAME.INC as Semicolon separated file
\par 
\par OTHER
\par   EXIT                   : Leave command and go back to calling routine
\par   QUIT                   : Leave the optimiser and finish program
\par   TIGHT                  : Try to sqeeze unnecessary stuff out of the matrix
\par                            Explanation }{\strike\f2 Compression}{\v\f2 compression}{\f2 
\par   UNTIGHT                : deactivate the tight option
\par   LOG                    : Start logging
\par   UNLOG                  : Stop logging
\par   NEW                    : Remove matrix from memory
\par   }{\strike\f2 Example}{\v\f2 command-file-example}{\f2 
\par }{\v  mpsx-with-recursion}{\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{crash}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Crash}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{
Crash; Basis}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{38}}}{\f2 Crash
\par 
\par The easies way to create a numerically stable starting }{\strike\f2 basis}{\v\f2 basis}{\f2 
 is the use of only slacks and artificials. This basis is normally far from optimum. If you perform a crash you try to move as many structural vectors as possible into the basis and remain a l-matrix and stay not singular.\page }{\cs18\f2\super #
{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{nodes}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\super $}{Nodes}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Nodes; Integer-Search}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{39}}}{\f2 Nodes
\par 
\par A node is tightened derivative of the relaxed lp model you started with when entering integer search. It contains additional constraints to force a variable to an integer value which was noninteger at the previous iteration.\page }{\cs18\f2\super #
{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{mpsx-formatted-in}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }
\adjustright \fs20\lang2057\cgrid {\cs18\super $}{MPSX}{\f2 -formatted-in}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{MPSX; Fixed Column Width}}n
{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{40}}}{\f2 MPSX formatted
\par 
\par This format uses the standard MPSX-Format. The differences to the format used by this program are:
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 The names of 
rows and columns may contain spaces
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
The length of the names are limited to 8 chars
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\f2 
per line only maximum two entries in the colum section allowed.
\par }\pard \widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par All other information is the same as in the }{\strike\f2 MPSX-format}{\v\f2 mpsx-format-in}{\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #
}{lr-decomposition}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{LR-Decomposition}}K{\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{ LR-Decomposition; Inversion}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright 
\fs20\lang2057\cgrid {\cs18\super n}{41}}}{\f2 LR-Decomposition
\par 
\par This means the kind of }{\strike\f2 inversion}{\v\f2 inversion}{\f2  used by this optimiser
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{infeasible-file}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Infeasible-File}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {
\cs18\super K}{infeasible; Files}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{42}}}{\f2 Infeasible File
\par This file is created if you ask for an integer solution file but the problem was infeasible. It contains a list of all }{\strike\f2 
\par }{\v\f2 infeasibility}{\f2  vectors\page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{binary-file}}${\footnote\ftnalt \pard\plain 
\s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Binary-File}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super 
K}{binary-File; Integer-Search; Nodes}}n{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{43}}}{\f2 binary files
\par 
\par These files can not be viewed with a certain program. They are sometimes (if the search tree needs more memory than available to the system) created by the solver during }{\strike\f2 integer search}{\v\f2 integer-search}{\f2 
. They contain information about the bounds used, which variables are at their integer bounds, the basis of the different waiting nodes.
\par \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super #}{row-type}}${\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0
\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super $}{Row-Type}}K{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Row; N-Type, E-Type, G-Type, L-Type}}n
{\footnote\ftnalt \pard\plain \s17\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright \fs20\lang2057\cgrid {\cs18\super n}{44}}}{\f2 Row-Type
\par 
\par In the }{\strike\f2 MPSX-format}{\v\f2 mpsx-format-in}{\f2  you can define different types of constraints:
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 N-Type}{\f2 
 Unlimited: The value of the row can be from -infinite to +infinite:}{\f2\lang1024  T}{\f2 he bounds of the slack are not limited}{\b\f2 
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 E-Type }{\f2 
Equation: The value of the row is fixed: The slack has a fixed bound of zero.
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 L-Type}{\f2 
: The value of the row is less then a certain value
\par {\pntext\pard\plain\f3\fs20\lang2057\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-283\li283\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}\ls1\adjustright {\b\f2 G-Type}{\f2 
: The value of the row is less then a certain value
\par }\pard \widctlpar\adjustright {\f2 \page }{\cs18\f2\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super #}{Solution-CSV}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\super $}{CSV-File Solution}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{Solution;CSV;Output;Excel;Spreadsheet}}n{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {
\cs18\super n}{47}}}{\f2 Solution-File in CSV-Format
\par The extention of this output *.LOC
\par The contents is the same as the }{\strike\f2 solution file *.LOS}{\v\f2\ul solution-file-example}{\f2 
 exept that blanks are substituted by zeros and all numbers are separated by semicolons instead blands. This output can be easyly opened with excel.or another spreadsheet.
\par }{\f2\lang1031 \page }{\cs18\f2\lang1031\super #{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\lang1036\super #}{\lang1036 Int-Solution-CSV}}${\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright 
\fs20\lang2057\cgrid {\cs18\lang1036\super $}{\lang1036 CSV-Int-File-Solution}}K{\footnote\ftnalt \pard\plain \s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super K}{ Int-Solution;CSV;Output;Excel;Spreadsheet}}n{\footnote\ftnalt \pard\plain 
\s17\widctlpar\adjustright \fs20\lang2057\cgrid {\cs18\super n}{48}}}{\f2\lang1031 Integer-Solution in CSV Format
\par }{\f2 The extention of this output *.INC
\par The contents is the same as the }{\strike\f2 INT-solution file *.INT}{\v\f2\ul integer-solution-file-example}{\f2  except that blanks are substituted by zeros and all numbers are separated by semicolons instead
 blanks. This output can be easily opened with excel or another spreadsheet.
\par }}